"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
const useSetState_1 = __importDefault(require("./useSetState"));
const useIsomorphicLayoutEffect_1 = __importDefault(require("./useIsomorphicLayoutEffect"));
const useDebounceCallback_1 = __importDefault(require("./useDebounceCallback"));
function useTargetScale(realWidth, realHeight, realScale, speed, updateEasing) {
    const execRef = (0, react_1.useRef)(false);
    const [{ lead, scale }, updateState] = (0, useSetState_1.default)({ lead: true, scale: realScale });
    const moveScale = (0, useDebounceCallback_1.default)((current) => __awaiter(this, void 0, void 0, function* () {
        updateEasing(true);
        updateState({ lead: false, scale: current });
    }), { wait: speed });
    (0, useIsomorphicLayoutEffect_1.default)(() => {
        if (!execRef.current) {
            execRef.current = true;
            return;
        }
        updateEasing(false);
        updateState({ lead: true });
        moveScale(realScale);
    }, [realScale]);
    if (lead) {
        return [realWidth * scale, realHeight * scale, realScale / scale];
    }
    return [realWidth * realScale, realHeight * realScale, 1];
}
exports.default = useTargetScale;
