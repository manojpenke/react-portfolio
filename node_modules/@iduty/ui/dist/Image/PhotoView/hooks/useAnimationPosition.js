"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const useAnimationOrigin_1 = __importDefault(require("./useAnimationOrigin"));
const useTargetScale_1 = __importDefault(require("./useTargetScale"));
function useAnimationPosition(visible, originRef, loaded, x, y, width, height, scale, speed, updateEasing, container) {
    const innerHeight = container.getBoundingClientRect().height;
    const [autoWidth, autoHeight, autoScale] = (0, useTargetScale_1.default)(width, height, scale, speed, updateEasing);
    const [easingMode, originRect] = (0, useAnimationOrigin_1.default)(visible, originRef, loaded, speed, updateEasing);
    const { T, L, W, H, FIT } = originRect;
    const centerWidth = innerWidth / 2;
    const centerHeight = innerHeight / 2;
    const offsetX = centerWidth - (width * scale) / 2;
    const offsetY = centerHeight - (height * scale) / 2;
    const miniMode = easingMode < 3 || easingMode > 4;
    const translateX = miniMode ? (W ? L : centerWidth) : x + offsetX;
    const translateY = miniMode ? (W ? T : centerHeight) : y + offsetY;
    const minScale = W / (width * scale) || 0.01;
    const currentHeight = miniMode && FIT ? autoWidth * (H / W) : autoHeight;
    const currentScale = easingMode === 0 ? autoScale : miniMode ? minScale : autoScale;
    const opacity = miniMode ? (FIT ? 1 : 0) : 1;
    return [
        translateX,
        translateY,
        autoWidth,
        currentHeight,
        currentScale,
        opacity,
        easingMode,
        FIT,
    ];
}
exports.default = useAnimationPosition;
