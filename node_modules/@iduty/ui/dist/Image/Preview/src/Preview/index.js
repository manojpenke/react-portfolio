"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
require("./style.scss");
const PhotoView_1 = require("../../../PhotoView");
const app_1 = require("@iduty/app");
const ComponentView = ({ className, show, start, images, onClose, onChange, }) => {
    const initState = {
        index: 0,
        show: false,
    };
    const [state, dispatch] = (0, app_1.$reducer)(Object.assign({}, initState));
    (0, react_1.useEffect)(() => {
        dispatch({
            index: !show ? 0 : start,
            show: !show ? false : true,
        });
        return Destroy;
    }, [show]);
    const Destroy = () => {
        app_1.$iduty.destroy('iDutyPreviewImage');
    };
    const onIndexChange = (e) => {
        dispatch({
            index: e
        });
        onChange === null || onChange === void 0 ? void 0 : onChange(e);
    };
    const onHide = () => {
        dispatch({
            show: false
        });
        onClose === null || onClose === void 0 ? void 0 : onClose();
    };
    const renderView = () => {
        return (react_1.default.createElement(PhotoView_1.PhotoSlider, { className: className, images: images, visible: state.show, onClose: onHide, index: state.index, onIndexChange: onIndexChange }));
    };
    return renderView();
};
exports.default = ComponentView;
