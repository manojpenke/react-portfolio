"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
require("./style.scss");
;
const ComponentView = ({ className = '', label, value = '', placeholder = '请输入', disabled, maxLen = 0, type = 'text', rows, theme = 'horizontal', showClear, onChange, }) => {
    const [len, setLen] = (0, react_1.useState)(0);
    (0, react_1.useEffect)(() => {
        setLen(value.length);
    }, [value]);
    const onClean = () => {
        onChange === null || onChange === void 0 ? void 0 : onChange('');
    };
    const _onChange = (e) => {
        let str = e.target.value;
        if (maxLen && str.length > maxLen) {
            str = str.substring(0, maxLen);
        }
        onChange === null || onChange === void 0 ? void 0 : onChange(str);
    };
    const renderInput = () => {
        const config = {
            value,
            onInput: _onChange,
            disabled,
        };
        if (type === 'textarea') {
            if (rows)
                config['rows'] = rows;
            return (react_1.default.createElement("textarea", Object.assign({}, config)));
        }
        return (react_1.default.createElement("input", Object.assign({}, config, { type: type })));
    };
    return (react_1.default.createElement("div", { className: `__iduty_input ${theme} ${className}` },
        label &&
            react_1.default.createElement("div", { className: "that_label" }, label),
        react_1.default.createElement("div", { className: "__iduty_input_text" },
            type !== 'textarea' && (react_1.default.createElement("div", { className: "__iduty_input_input" },
                renderInput(),
                value && showClear && (react_1.default.createElement("div", { onClick: onClean, className: "that_clear" }, "\uE644")))),
            type === 'textarea' && renderInput(),
            !value && (react_1.default.createElement("div", { className: "__iduty_input_placeholder" }, placeholder))),
        type === 'textarea' && (react_1.default.createElement("div", { className: "that_other" },
            ((value && showClear) || maxLen) ? (react_1.default.createElement("div", null)) : null,
            maxLen ? (react_1.default.createElement("div", { className: "that_limit" },
                len,
                "/",
                maxLen)) : null,
            value && showClear && (react_1.default.createElement("div", { onClick: onClean, className: "that_clear" }, "\uE644"))))));
};
exports.default = ComponentView;
