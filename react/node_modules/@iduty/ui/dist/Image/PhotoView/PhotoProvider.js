"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const useMethods_1 = __importDefault(require("./hooks/useMethods"));
const useSetState_1 = __importDefault(require("./hooks/useSetState"));
const photo_context_1 = __importDefault(require("./photo-context"));
const PhotoSlider_1 = __importDefault(require("./PhotoSlider"));
const initialState = {
    images: [],
    visible: false,
    index: 0,
};
function PhotoProvider(_a) {
    var { children, onIndexChange, onVisibleChange } = _a, restProps = __rest(_a, ["children", "onIndexChange", "onVisibleChange"]);
    const [state, updateState] = (0, useSetState_1.default)(initialState);
    const uniqueIdRef = (0, react_1.useRef)(0);
    const { images, visible, index } = state;
    const methods = (0, useMethods_1.default)({
        nextId() {
            return (uniqueIdRef.current += 1);
        },
        update(imageItem) {
            const currentIndex = images.findIndex((n) => n.key === imageItem.key);
            if (currentIndex > -1) {
                const nextImages = images.slice();
                nextImages.splice(currentIndex, 1, imageItem);
                updateState({
                    images: nextImages,
                });
                return;
            }
            updateState((prev) => ({
                images: prev.images.concat(imageItem),
            }));
        },
        remove(key) {
            updateState((prev) => {
                const nextImages = prev.images.filter((item) => item.key !== key);
                const nextEndIndex = nextImages.length - 1;
                return {
                    images: nextImages,
                    index: Math.min(nextEndIndex, index),
                };
            });
        },
        show(key) {
            const currentIndex = images.findIndex((item) => item.key === key);
            updateState({
                visible: true,
                index: currentIndex,
            });
            if (onVisibleChange) {
                onVisibleChange(true, currentIndex, state);
            }
        },
    });
    const fn = (0, useMethods_1.default)({
        close() {
            updateState({
                visible: false,
            });
            if (onVisibleChange) {
                onVisibleChange(false, index, state);
            }
        },
        changeIndex(nextIndex) {
            updateState({
                index: nextIndex,
            });
            if (onIndexChange) {
                onIndexChange(nextIndex, state);
            }
        },
    });
    const value = (0, react_1.useMemo)(() => (Object.assign(Object.assign({}, state), methods)), [state, methods]);
    return (react_1.default.createElement(photo_context_1.default.Provider, { value: value },
        children,
        react_1.default.createElement(PhotoSlider_1.default, Object.assign({ images: images, visible: visible, index: index, onIndexChange: fn.changeIndex, onClose: fn.close }, restProps))));
}
exports.default = PhotoProvider;
