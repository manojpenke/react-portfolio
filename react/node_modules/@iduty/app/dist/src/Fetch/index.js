"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = __importDefault(require("axios"));
const Config_1 = __importDefault(require("../Config"));
const Loading_1 = __importDefault(require("../Loading"));
const Toast_1 = __importDefault(require("../Toast"));
const Cache_1 = require("../Cache");
const Navigate_1 = require("../Navigate");
exports.default = (url, params = {}, extend = {}) => {
    const __exts = {
        loading: extend.loading === undefined ? true : !!extend.loading,
        toast: extend.toast === undefined ? true : !!extend.toast,
        isJava: extend.java === undefined ? true : extend.java,
    };
    const $$token = (0, Cache_1.$getStorage)('$$token') || {};
    const opts = {
        url: '',
        method: (extend === null || extend === void 0 ? void 0 : extend.method) || 'post',
        data: params || {},
        baseURL: '',
        timeout: 30000,
        headers: {
            'content-type': 'application/json',
        },
        responseType: 'json',
        responseEncoding: 'utf8',
        maxContentLength: 2000,
    };
    if (/^http/.test(url)) {
        opts.url = url;
    }
    else {
        if (__exts === null || __exts === void 0 ? void 0 : __exts.isJava) {
            opts.url = '/api/' + url.replace(new RegExp('^/'), '');
            opts.baseURL = Config_1.default.apiHost;
        }
        else {
            opts.url = '/api.php/?s=' + url.replace(new RegExp('^/'), '');
            opts.baseURL = Config_1.default.apiPhpHost;
        }
    }
    if (__exts === null || __exts === void 0 ? void 0 : __exts.isJava) {
        if ($$token)
            opts.headers['Jban-Login-Token'] = $$token;
    }
    else {
        if (opts.method === 'post') {
            opts.headers['content-type'] = 'application/x-www-form-urlencoded';
        }
        if ($$token)
            opts.headers['token'] = $$token;
        opts.url += `&system_type=default&application=app&application_client_type=weixin&token=${$$token}&uuid=&ajax=ajax&appSource=app`;
    }
    opts.headers = Object.assign(Object.assign({}, opts.headers), ((extend === null || extend === void 0 ? void 0 : extend.headers) || {}));
    return new Promise((resolve, reject) => {
        __exts.loading && Loading_1.default.show();
        (0, axios_1.default)(opts).then((res) => {
            var _a, _b;
            __exts.loading && Loading_1.default.hide();
            if (res.data.code === -400) {
                (0, Navigate_1.$toLogin)();
                return;
            }
            if (res.data.code !== 0) {
                __exts.toast && (0, Toast_1.default)(((_a = res === null || res === void 0 ? void 0 : res.data) === null || _a === void 0 ? void 0 : _a.msg) || '当前访问人数过多，请稍后重试！');
                console.log('_______________res.data', res.data);
                reject(res.data);
                return;
            }
            resolve(((_b = res === null || res === void 0 ? void 0 : res.data) === null || _b === void 0 ? void 0 : _b.data) || '');
        }).catch((err) => {
            __exts.loading && Loading_1.default.hide();
            __exts.toast && (0, Toast_1.default)('请检查网络或稍后重试');
            reject(err);
        });
    });
};
